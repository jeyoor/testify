; SLIME 20100404
user> (doc vec
           )
-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
nil
user> (vec (list "a" "b" "c"))
["a" "b" "c"]
user> 
testify.process.transform> (file-transform "/root/working/testify/src/testify/templates/base.html" "/root/working/testify/src/testify/templates/main.tr")
nil
testify.process.transform> (html/html-snippet (slurp "/root/working/testify/src/testify/templates/base.html"))
(" " {:type :comment, :data " Using Enlive "} "\n" {:tag :html, :attrs {:lang "en"}, :content ("\n    " {:tag :head, :attrs nil, :content ("\n      " {:tag :title, :attrs nil, :content nil} "\n      " {:tag :link, :attrs {:href "/bootstrap.min.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n      " {:tag :link, :attrs {:href "/base.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n    ")} "\n    " {:tag :body, :attrs nil, :content ("\n      " {:tag :div, :attrs {:class "navbar navbar-fixed-top"}, :content ("\n\t" {:tag :div, :attrs {:class "navbar-inner"}, :content ("\n\t  " {:tag :div, :attrs {:class "container-fluid"}, :content ("\n\t    " {:tag :nav, :attrs {:class "nav-collapse", :id "topnav"}, :content ("\n\t      " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t\t" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/"}, :content ("Home")})} "\n\t      ")} "\n\t    ")} "\n\t  ")} "\n\t")} "\n      ")} {:type :comment, :data " end topnav "} "\n      " {:tag :div, :attrs {:class "container"}, :content ("\n        " {:tag :header, :attrs {:class "row", :id "banner"}, :content ("\n\t  " {:type :comment, :data " header "} "\n            " {:tag :h2, :attrs nil, :content (" " {:tag :a, :attrs {:href "/"}, :content ("Testify")} " ")} "\n            " {:tag :span, :attrs {:id "pagetitle"}, :content ("Page Title")} " " {:tag :br, :attrs nil, :content nil} "\n            " {:tag :a, :attrs {:href "/otherplace", :id "biglink"}, :content ("Sample link")} "\n        ")} "\n\n\t" {:tag :div, :attrs {:class "row"}, :content ("\n\t  " {:tag :div, :attrs {:class "span8"}, :content ("\n\t    " {:tag :header, :attrs {:class "row", :id "main"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "main"}, :content ("\n\t      " {:type :comment, :data " article "} "\n\t    ")} "\n\t    " {:tag :footer, :attrs {:class "row", :id "main"}, :content nil} "\n\n\t    " {:tag :header, :attrs {:class "row", :id "alt"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "alt"}, :content ("\n\t    " {:tag :footer, :attrs {:class "row", :id "alt"}, :content nil} "\n\t      " {:type :comment, :data " Alternate content that may be omitted "} "\n\t      " {:type :comment, :data " altalticle "} "\n\t    ")} "\n\t  ")} "\n\n\n\t  " {:type :comment, :data " A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  "} "\n\t  " {:tag :nav, :attrs {:class "span2 offset1 nav-list", :id "sidenav"}, :content ("\n\t    " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t      " {:type :comment, :data " sidenav "} "\n\t    ")} "\n\t  ")} "\n      ")} {:type :comment, :data " end row "} "\n\n      " {:type :comment, :data " debug "} {:type :comment, :data " If/when we enable the debug template, it goes here "} "\n\n      " {:tag :footer, :attrs {:class "row", :id "footer"}, :content ("\n\t" {:tag :hr, :attrs nil, :content nil} "\n\t" {:type :comment, :data " footer "} "\n      ")} "\n      " {:tag :footer, :attrs {:class "row", :id "legal"}, :content ("\n\t" {:type :comment, :data " legal "} "\n      ")} "\n    ")} {:type :comment, :data " end container "} "\n  ")} "\n")} "\n")
testify.process.transform> (def basey (html/html-snippet (slurp "/root/working/testify/src/testify/templates/base.html")))
#'testify.process.transform/basey
testify.process.transform> basey
(" " {:type :comment, :data " Using Enlive "} "\n" {:tag :html, :attrs {:lang "en"}, :content ("\n    " {:tag :head, :attrs nil, :content ("\n      " {:tag :title, :attrs nil, :content nil} "\n      " {:tag :link, :attrs {:href "/bootstrap.min.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n      " {:tag :link, :attrs {:href "/base.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n    ")} "\n    " {:tag :body, :attrs nil, :content ("\n      " {:tag :div, :attrs {:class "navbar navbar-fixed-top"}, :content ("\n\t" {:tag :div, :attrs {:class "navbar-inner"}, :content ("\n\t  " {:tag :div, :attrs {:class "container-fluid"}, :content ("\n\t    " {:tag :nav, :attrs {:class "nav-collapse", :id "topnav"}, :content ("\n\t      " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t\t" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/"}, :content ("Home")})} "\n\t      ")} "\n\t    ")} "\n\t  ")} "\n\t")} "\n      ")} {:type :comment, :data " end topnav "} "\n      " {:tag :div, :attrs {:class "container"}, :content ("\n        " {:tag :header, :attrs {:class "row", :id "banner"}, :content ("\n\t  " {:type :comment, :data " header "} "\n            " {:tag :h2, :attrs nil, :content (" " {:tag :a, :attrs {:href "/"}, :content ("Testify")} " ")} "\n            " {:tag :span, :attrs {:id "pagetitle"}, :content ("Page Title")} " " {:tag :br, :attrs nil, :content nil} "\n            " {:tag :a, :attrs {:href "/otherplace", :id "biglink"}, :content ("Sample link")} "\n        ")} "\n\n\t" {:tag :div, :attrs {:class "row"}, :content ("\n\t  " {:tag :div, :attrs {:class "span8"}, :content ("\n\t    " {:tag :header, :attrs {:class "row", :id "main"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "main"}, :content ("\n\t      " {:type :comment, :data " article "} "\n\t    ")} "\n\t    " {:tag :footer, :attrs {:class "row", :id "main"}, :content nil} "\n\n\t    " {:tag :header, :attrs {:class "row", :id "alt"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "alt"}, :content ("\n\t    " {:tag :footer, :attrs {:class "row", :id "alt"}, :content nil} "\n\t      " {:type :comment, :data " Alternate content that may be omitted "} "\n\t      " {:type :comment, :data " altalticle "} "\n\t    ")} "\n\t  ")} "\n\n\n\t  " {:type :comment, :data " A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  "} "\n\t  " {:tag :nav, :attrs {:class "span2 offset1 nav-list", :id "sidenav"}, :content ("\n\t    " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t      " {:type :comment, :data " sidenav "} "\n\t    ")} "\n\t  ")} "\n      ")} {:type :comment, :data " end row "} "\n\n      " {:type :comment, :data " debug "} {:type :comment, :data " If/when we enable the debug template, it goes here "} "\n\n      " {:tag :footer, :attrs {:class "row", :id "footer"}, :content ("\n\t" {:tag :hr, :attrs nil, :content nil} "\n\t" {:type :comment, :data " footer "} "\n      ")} "\n      " {:tag :footer, :attrs {:class "row", :id "legal"}, :content ("\n\t" {:type :comment, :data " legal "} "\n      ")} "\n    ")} {:type :comment, :data " end container "} "\n  ")} "\n")} "\n")
testify.process.transform> (test-transform "/root/working/testify/src/testify/templates/base.html" "/root/working/testify/src/testify/templates/main.tr")
(" " {:type :comment, :data " Using Enlive "} "\n" {:tag :html, :attrs {:lang "en"}, :content ("\n    " {:tag :head, :attrs nil, :content ("\n      " {:tag :title, :attrs nil, :content ()} "\n      " {:tag :link, :attrs {:href "/bootstrap.min.css", :type "text/css", :rel "stylesheet"}, :content ()} "\n      " {:tag :link, :attrs {:href "/base.css", :type "text/css", :rel "stylesheet"}, :content ()} "\n    ")} "\n    " {:tag :body, :attrs nil, :content ("\n      " {:tag :div, :attrs {:class "navbar navbar-fixed-top"}, :content ("\n\t" {:tag :div, :attrs {:class "navbar-inner"}, :content ("\n\t  " {:tag :div, :attrs {:class "container-fluid"}, :content ("\n\t    " {:tag :nav, :attrs {:class "nav-collapse", :id "topnav"}, :content ("\n\t      " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t\t" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/"}, :content ("Home")})} "\n\t      ")} "\n\t    ")} "\n\t  ")} "\n\t")} "\n      ")} {:type :comment, :data " end topnav "} "\n      " {:tag :div, :attrs {:class "container"}, :content ("\n        " {:tag :header, :attrs {:class "row", :id "banner"}, :content ("\n\t  " {:type :comment, :data " header "} "\n            " {:tag :h2, :attrs nil, :content (" " {:tag :a, :attrs {:href "/"}, :content ("Testify")} " ")} "\n            " {:tag :span, :attrs {:id "pagetitle"}, :content ("Page Title")} " " {:tag :br, :attrs nil, :content ()} "\n            " {:tag :a, :attrs {:href "/otherplace", :id "biglink"}, :content ("Sample link")} "\n        ")} "\n\n\t" {:tag :div, :attrs {:class "row"}, :content ("\n\t  " {:tag :div, :attrs {:class "span8"}, :content ("\n\t    " {:tag :header, :attrs {:class "row", :id "main"}, :content ()} "\n\t    " {:tag :article, :attrs {:class "row", :id "main"}, :content ("\n\t      " {:type :comment, :data " article "} "\n\t    ")} "\n\t    " {:tag :footer, :attrs {:class "row", :id "main"}, :content ()} "\n\n\t    " {:tag :header, :attrs {:class "row", :id "alt"}, :content ()} "\n\t    " {:tag :article, :attrs {:class "row", :id "alt"}, :content ("\n\t    " {:tag :footer, :attrs {:class "row", :id "alt"}, :content ()} "\n\t      " {:type :comment, :data " Alternate content that may be omitted "} "\n\t      " {:type :comment, :data " altalticle "} "\n\t    ")} "\n\t  ")} "\n\n\n\t  " {:type :comment, :data " A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  "} "\n\t  " {:tag :nav, :attrs {:class "span2 offset1 nav-list", :id "sidenav"}, :content ("\n\t    " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t      " {:type :comment, :data " sidenav "} "\n\t    ")} "\n\t  ")} "\n      ")} {:type :comment, :data " end row "} "\n\n      " {:type :comment, :data " debug "} {:type :comment, :data " If/when we enable the debug template, it goes here "} "\n\n      " {:tag :footer, :attrs {:class "row", :id "footer"}, :content ("\n\t" {:tag :hr, :attrs nil, :content ()} "\n\t" {:type :comment, :data " footer "} "\n      ")} "\n      " {:tag :footer, :attrs {:class "row", :id "legal"}, :content (" <p>Copyright &copy; 2012 the Testify Development Team</p>")} "\n    ")} {:type :comment, :data " end container "} "\n  ")} "\n")} "\n")
testify.process.transform> (test-lex "/root/working/testify/src/testify/templates/main.tr")
(("title" "content " " Testify Web App") ("nav#topnav ul" "append " " \n<li><a href=\"/\">Pages</a></li>\n  <li><a href=\"/admin\">Admin</a></li>\n  <li><a href=\"/dashboard\">Dashboard</li>\n") ("nav#sidenav" "append " " \n  <li><a href=\"/next\">Next Page</a></li>\n  <li><a href=\"/prev\">Previous Page</a></li>\n  <li><a href=\"/page/form\">Add a page</a></li>\n") ("header#banner" "content " " <div style=\"height: px; background-color: olive; margin: auto;\"><h1>Ad Banner</h1></div>") ("footer#legal" "content " " <p>Copyright &copy; 2012 the Testify Development Team</p>"))
testify.process.transform> promise
#<core$promise clojure.core$promise@42f9ef>
testify.process.transform> (def toks (test-lex "/root/working/testify/src/testify/templates/main.tr") )
#'testify.process.transform/toks
testify.process.transform> (second (second toks))
"append "
testify.process.transform> toks
(("title" "content " " Testify Web App") ("nav#topnav ul" "append " " \n<li><a href=\"/\">Pages</a></li>\n  <li><a href=\"/admin\">Admin</a></li>\n  <li><a href=\"/dashboard\">Dashboard</li>\n") ("nav#sidenav" "append " " \n  <li><a href=\"/next\">Next Page</a></li>\n  <li><a href=\"/prev\">Previous Page</a></li>\n  <li><a href=\"/page/form\">Add a page</a></li>\n") ("header#banner" "content " " <div style=\"height: px; background-color: olive; margin: auto;\"><h1>Ad Banner</h1></div>") ("footer#legal" "content " " <p>Copyright &copy; 2012 the Testify Development Team</p>"))
testify.process.transform> (first (second toks))
"nav#topnav ul"
testify.process.transform> (process-selector(first (second toks)) )
(:nav#topnav :ul)
testify.process.transform> (vec (process-selector(first (second toks)) ) )
[:nav#topnav :ul]
testify.process.transform> (nth 4 toks)
; Evaluation aborted.
testify.process.transform> (nth toks 4)
("footer#legal" "content " " <p>Copyright &copy; 2012 the Testify Development Team</p>")
testify.process.transform> (need-nodes? (second (nth toks 4)))
false
testify.process.transform> (second (nth toks 4))
"content "
testify.process.transform> (second (nth toks 4))
"content "
testify.process.transform> (need-nodes? (second (nth toks 4)))
true
testify.process.transform> (file-transform "/root/working/testify/src/testify/templates/base.html" "/root/working/testify/src/testify/templates/main.tr")
nil
testify.process.transform> (def toks (test-lex "/root/working/testify/src/testify/templates/main.tr") )
#'testify.process.transform/toks
testify.process.transform> (def toks (test-lex "/root/working/testify/src/testify/templates/main.tr") )
#'testify.process.transform/toks
testify.process.transform> (second toks)
("nav#topnav ul" "append " " \n<li><a href=\"/\">Pages</a></li>\n  <li><a href=\"/admin\">Admin</a></li>\n  <li><a href=\"/dashboard\">Dashboard</li>\n")
testify.process.transform> (second (second toks))
"append "
testify.process.transform> (def trans2 (second toks))
                                         
#'testify.process.transform/trans2
testify.process.transform> trans2
("nav#topnav ul" "append " " \n<li><a href=\"/\">Pages</a></li>\n  <li><a href=\"/admin\">Admin</a></li>\n  <li><a href=\"/dashboard\">Dashboard</li>\n")
testify.process.transform> (first trans2)
"nav#topnav ul"
testify.process.transform> (process-selector (first trans2))
(:nav#topnav :ul)
testify.process.transform> (need-nodes? (second trans2))
true
testify.process.transform> (def nodeys (html/html-snippet (slurp "/root/working/testify/src/testify/templates/base.html" )))
#'testify.process.transform/nodeys
testify.process.transform> nodeys
(" " {:type :comment, :data " Using Enlive "} "\n" {:tag :html, :attrs {:lang "en"}, :content ("\n    " {:tag :head, :attrs nil, :content ("\n      " {:tag :title, :attrs nil, :content nil} "\n      " {:tag :link, :attrs {:href "/bootstrap.min.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n      " {:tag :link, :attrs {:href "/base.css", :type "text/css", :rel "stylesheet"}, :content nil} "\n    ")} "\n    " {:tag :body, :attrs nil, :content ("\n      " {:tag :div, :attrs {:class "navbar navbar-fixed-top"}, :content ("\n\t" {:tag :div, :attrs {:class "navbar-inner"}, :content ("\n\t  " {:tag :div, :attrs {:class "container-fluid"}, :content ("\n\t    " {:tag :nav, :attrs {:class "nav-collapse", :id "topnav"}, :content ("\n\t      " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t\t" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/"}, :content ("Home")})} "\n\t      ")} "\n\t    ")} "\n\t  ")} "\n\t")} "\n      ")} {:type :comment, :data " end topnav "} "\n      " {:tag :div, :attrs {:class "container"}, :content ("\n        " {:tag :header, :attrs {:class "row", :id "banner"}, :content ("\n\t  " {:type :comment, :data " header "} "\n            " {:tag :h2, :attrs nil, :content (" " {:tag :a, :attrs {:href "/"}, :content ("Testify")} " ")} "\n            " {:tag :span, :attrs {:id "pagetitle"}, :content ("Page Title")} " " {:tag :br, :attrs nil, :content nil} "\n            " {:tag :a, :attrs {:href "/otherplace", :id "biglink"}, :content ("Sample link")} "\n        ")} "\n\n\t" {:tag :div, :attrs {:class "row"}, :content ("\n\t  " {:tag :div, :attrs {:class "span8"}, :content ("\n\t    " {:tag :header, :attrs {:class "row", :id "main"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "main"}, :content ("\n\t      " {:type :comment, :data " article "} "\n\t    ")} "\n\t    " {:tag :footer, :attrs {:class "row", :id "main"}, :content nil} "\n\n\t    " {:tag :header, :attrs {:class "row", :id "alt"}, :content nil} "\n\t    " {:tag :article, :attrs {:class "row", :id "alt"}, :content ("\n\t    " {:tag :footer, :attrs {:class "row", :id "alt"}, :content nil} "\n\t      " {:type :comment, :data " Alternate content that may be omitted "} "\n\t      " {:type :comment, :data " altalticle "} "\n\t    ")} "\n\t  ")} "\n\n\n\t  " {:type :comment, :data " A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  "} "\n\t  " {:tag :nav, :attrs {:class "span2 offset1 nav-list", :id "sidenav"}, :content ("\n\t    " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t      " {:type :comment, :data " sidenav "} "\n\t    ")} "\n\t  ")} "\n      ")} {:type :comment, :data " end row "} "\n\n      " {:type :comment, :data " debug "} {:type :comment, :data " If/when we enable the debug template, it goes here "} "\n\n      " {:tag :footer, :attrs {:class "row", :id "footer"}, :content ("\n\t" {:tag :hr, :attrs nil, :content nil} "\n\t" {:type :comment, :data " footer "} "\n      ")} "\n      " {:tag :footer, :attrs {:class "row", :id "legal"}, :content ("\n\t" {:type :comment, :data " legal "} "\n      ")} "\n    ")} {:type :comment, :data " end container "} "\n  ")} "\n")} "\n")
testify.process.transform> (html/transform nodeys (vec (process-selector (first trans2))) (html/content (html/html-snippet (nth trans2 2)) ) )
(" " {:type :comment, :data " Using Enlive "} "\n" {:tag :html, :attrs {:lang "en"}, :content ("\n    " {:tag :head, :attrs nil, :content ("\n      " {:tag :title, :attrs nil, :content ()} "\n      " {:tag :link, :attrs {:href "/bootstrap.min.css", :type "text/css", :rel "stylesheet"}, :content ()} "\n      " {:tag :link, :attrs {:href "/base.css", :type "text/css", :rel "stylesheet"}, :content ()} "\n    ")} "\n    " {:tag :body, :attrs nil, :content ("\n      " {:tag :div, :attrs {:class "navbar navbar-fixed-top"}, :content ("\n\t" {:tag :div, :attrs {:class "navbar-inner"}, :content ("\n\t  " {:tag :div, :attrs {:class "container-fluid"}, :content ("\n\t    " {:tag :nav, :attrs {:class "nav-collapse", :id "topnav"}, :content ("\n\t      " {:tag :ul, :attrs {:class "nav"}, :content (" \n" {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/"}, :content ("Pages")})} "\n  " {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/admin"}, :content ("Admin")})} "\n  " {:tag :li, :attrs nil, :content ({:tag :a, :attrs {:href "/dashboard"}, :content ("Dashboard")})} "\n")} "\n\t    ")} "\n\t  ")} "\n\t")} "\n      ")} {:type :comment, :data " end topnav "} "\n      " {:tag :div, :attrs {:class "container"}, :content ("\n        " {:tag :header, :attrs {:class "row", :id "banner"}, :content ("\n\t  " {:type :comment, :data " header "} "\n            " {:tag :h2, :attrs nil, :content (" " {:tag :a, :attrs {:href "/"}, :content ("Testify")} " ")} "\n            " {:tag :span, :attrs {:id "pagetitle"}, :content ("Page Title")} " " {:tag :br, :attrs nil, :content ()} "\n            " {:tag :a, :attrs {:href "/otherplace", :id "biglink"}, :content ("Sample link")} "\n        ")} "\n\n\t" {:tag :div, :attrs {:class "row"}, :content ("\n\t  " {:tag :div, :attrs {:class "span8"}, :content ("\n\t    " {:tag :header, :attrs {:class "row", :id "main"}, :content ()} "\n\t    " {:tag :article, :attrs {:class "row", :id "main"}, :content ("\n\t      " {:type :comment, :data " article "} "\n\t    ")} "\n\t    " {:tag :footer, :attrs {:class "row", :id "main"}, :content ()} "\n\n\t    " {:tag :header, :attrs {:class "row", :id "alt"}, :content ()} "\n\t    " {:tag :article, :attrs {:class "row", :id "alt"}, :content ("\n\t    " {:tag :footer, :attrs {:class "row", :id "alt"}, :content ()} "\n\t      " {:type :comment, :data " Alternate content that may be omitted "} "\n\t      " {:type :comment, :data " altalticle "} "\n\t    ")} "\n\t  ")} "\n\n\n\t  " {:type :comment, :data " A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  "} "\n\t  " {:tag :nav, :attrs {:class "span2 offset1 nav-list", :id "sidenav"}, :content ("\n\t    " {:tag :ul, :attrs {:class "nav"}, :content ("\n\t      " {:type :comment, :data " sidenav "} "\n\t    ")} "\n\t  ")} "\n      ")} {:type :comment, :data " end row "} "\n\n      " {:type :comment, :data " debug "} {:type :comment, :data " If/when we enable the debug template, it goes here "} "\n\n      " {:tag :footer, :attrs {:class "row", :id "footer"}, :content ("\n\t" {:tag :hr, :attrs nil, :content ()} "\n\t" {:type :comment, :data " footer "} "\n      ")} "\n      " {:tag :footer, :attrs {:class "row", :id "legal"}, :content ("\n\t" {:type :comment, :data " legal "} "\n      ")} "\n    ")} {:type :comment, :data " end container "} "\n  ")} "\n")} "\n")
testify.process.transform> (apply str (html/emit* (html/transform nodeys (vec (process-selector (first trans2))) (html/content (html/html-snippet (nth trans2 2)) ) )))
" <!-- Using Enlive -->\n<html lang=\"en\">\n    <head>\n      <title></title>\n      <link href=\"/bootstrap.min.css\" type=\"text/css\" rel=\"stylesheet\" />\n      <link href=\"/base.css\" type=\"text/css\" rel=\"stylesheet\" />\n    </head>\n    <body>\n      <div class=\"navbar navbar-fixed-top\">\n\t<div class=\"navbar-inner\">\n\t  <div class=\"container-fluid\">\n\t    <nav class=\"nav-collapse\" id=\"topnav\">\n\t      <ul class=\"nav\"> \n<li><a href=\"/\">Pages</a></li>\n  <li><a href=\"/admin\">Admin</a></li>\n  <li><a href=\"/dashboard\">Dashboard</a></li>\n</ul>\n\t    </nav>\n\t  </div>\n\t</div>\n      </div><!-- end topnav -->\n      <div class=\"container\">\n        <header class=\"row\" id=\"banner\">\n\t  <!-- header -->\n            <h2> <a href=\"/\">Testify</a> </h2>\n            <span id=\"pagetitle\">Page Title</span> <br />\n            <a href=\"/otherplace\" id=\"biglink\">Sample link</a>\n        </header>\n\n\t<div class=\"row\">\n\t  <div class=\"span8\">\n\t    <header class=\"row\" id=\"main\"></header>\n\t    <article class=\"row\" id=\"main\">\n\t      <!-- article -->\n\t    </article>\n\t    <footer class=\"row\" id=\"main\"></footer>\n\n\t    <header class=\"row\" id=\"alt\"></header>\n\t    <article class=\"row\" id=\"alt\">\n\t    <footer class=\"row\" id=\"alt\"></footer>\n\t      <!-- Alternate content that may be omitted -->\n\t      <!-- altalticle -->\n\t    </article>\n\t  </div>\n\n\n\t  <!-- A plea to web developers:\n\n\t  Please let your content load before your side-bar navigation!\n\t  Please make it short and sweet, and put it on the RIGHT: at the\n\t  end of reading-order. That's right: nav isn't the star of your\n\t  site: content is!\n\t  -->\n\t  <nav class=\"span2 offset1 nav-list\" id=\"sidenav\">\n\t    <ul class=\"nav\">\n\t      <!-- sidenav -->\n\t    </ul>\n\t  </nav>\n      </div><!-- end row -->\n\n      <!-- debug --><!-- If/when we enable the debug template, it goes here -->\n\n      <footer class=\"row\" id=\"footer\">\n\t<hr />\n\t<!-- footer -->\n      </footer>\n      <footer class=\"row\" id=\"legal\">\n\t<!-- legal -->\n      </footer>\n    </div><!-- end container -->\n  </body>\n</html>\n"
testify.process.transform> (apply str (html/emit* (html/transform nodeys (vec (process-selector (first trans2))) (html/content (html/html-snippet (nth trans2 2)) ) ))) (file-transform "/root/working/testify/src/testify/templates/base.html" "/root/working/testify/src/testify/templates/main.tr")
nil
testify.process.transform> 